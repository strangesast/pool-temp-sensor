#user       www www;
worker_processes  1;
#error_log  logs/error.log;
#pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  1024;
}

http {
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent"';

  server {
    listen [::]:443 ssl http2 ipv6only=on; 
    listen 443 ssl http2;

    ssl_certificate /etc/ssl/certs/selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/selfsigned.key;

    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/dhparam.pem;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_ecdh_curve secp384r1;
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    ssl_stapling off;

    # self signed, soo no bueno. need client cert
    #ssl_stapling on;
    #ssl_stapling_verify on;

    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    # Disable strict transport security for now. You can uncomment the following
    # line if you understand the implications.
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    access_log logs/access.log main;

    server_name raspberrypi;
    include mime.types;

    # compress! complimented by webpack gz generation
    gzip on;
    gzip_static on;    
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1; 

    root /var/www/;

    #location /api/ {
    #  proxy_pass         http://api:3000;
    #  proxy_redirect     off;
    #  proxy_set_header   Host $host;
    #  proxy_set_header   X-Real-IP $remote_addr;
    #  proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    #  proxy_set_header   X-Forwarded-Host $server_name;
    #}

    location / {
      gunzip on;
      index index.html;
    }

    location /TempSensor/ {
      grpc_pass grpc://localhost:50051;
    }
  }

  server {
    listen 80;
    listen [::]:80;

    server_name raspberrypi

    return 302 https://$server_name$request_uri;
  }
}
